<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.beanions.admin.dao.AdminMapper">

    <resultMap id="membersResultMap" type="com.beanions.common.dto.MembersDTO">
        <id property="memberCode" column="MEMBER_CODE"/>
        <result property="memberId" column="MEMBER_ID"/>
        <result property="memberPw" column="MEMBER_PW"/>
        <result property="nickname" column="NICKNAME"/>
        <result property="email" column="EMAIL"/>
        <result property="phone" column="PHONE"/>
        <result property="gender" column="GENDER"/>
        <result property="marriedStatus" column="MARRIED_STATUS"/>
        <result property="memberRole" column="MEMBER_ROLE"/>
        <result property="weddingFile" column="WEDD_FILE"/>
        <result property="weddingVerified" column="WEDD_VEF"/>
        <result property="signupDate" column="SIGNUP_DATE"/>
    </resultMap>

    <resultMap id="memberPostResultMap" type="com.beanions.admin.dto.AdminMemberPostDTO">
        <id property="memberCode" column="MEMBER_CODE"/>
        <result property="board" column="POST_COUNT"/>
        <result property="comment" column="COMMENT_COUNT"/>

    </resultMap>

    <select id="membersAllList" resultMap="membersResultMap">
        SELECT
        MEMBER_CODE
        ,   MEMBER_ID
        ,   MEMBER_PW
        ,   NICKNAME
        ,   EMAIL
        ,   PHONE
        ,   GENDER
        ,   MARRIED_STATUS
        ,   MEMBER_ROLE
        ,   WEDD_FILE
        ,   WEDD_VEF
        ,   SIGNUP_DATE
        FROM MEMBERS
        ORDER BY SIGNUP_DATE DESC
        LIMIT 18
    </select>

    <select id="selectMembers" parameterType="_int" resultMap="membersResultMap">
        SELECT
        MEMBER_CODE
        ,   MEMBER_ID
        ,   MEMBER_PW
        ,   NICKNAME
        ,   EMAIL
        ,   PHONE
        ,   GENDER
        ,   MARRIED_STATUS
        ,   MEMBER_ROLE
        ,   WEDD_FILE
        ,   WEDD_VEF
        ,   SIGNUP_DATE
        FROM MEMBERS
        WHERE MEMBER_CODE = #{ code }
    </select>

    <update id="memberModify" parameterType="com.beanions.common.dto.MembersDTO">
        UPDATE MEMBERS
        SET
        NICKNAME = #{ nickname },
        WEDD_VEF = #{ weddingVerified }
        WHERE MEMBER_CODE = #{ memberCode }
    </update>

    <delete id="memberDelete" parameterType="_int">
        DELETE
        FROM MEMBERS
        WHERE MEMBER_CODE = #{ id }
    </delete>

    <select id="selectMemberPost" resultMap="selectCurrenBoardResultMap">
    SELECT
    POST_CODE
    , MEMBER_CODE
    , POST_TITLE
    , POST_CONTEXT
    , POST_DATE
    , MAIN_CATEGORY
    , SUB_CATEGORY
    , REVIEW_STATUS
    , VIEW_COUNT
    FROM POST
    WHERE MEMBER_CODE = #{ codes }
    LIMIT 5
    </select>


    <select id="selectAdminReviewData" parameterType="_int" resultMap="memberPostResultMap">
        SELECT
            A.POST_COUNT
        ,   B.COMMENT_COUNT
        FROM ( select count(*) POST_COUNT from POST      where MEMBER_CODE   = #{ codes } ) AS A
        ,  ( select count(*) COMMENT_COUNT from COMMENTS   where MEMBER_CODE = #{ codes } ) AS B
    </select>

    <resultMap id="adminPostResultMap" type="com.beanions.admin.dto.AdminPostDTO">
        <id property="postCode" column="post_code"/>
        <result property="memberCode" column="member_code"/>
        <result property="postTitle" column="post_title"/>
        <result property="postContext" column="post_context"/>
        <result property="postDate" column="post_date"/>
        <result property="mainCategory" column="main_category"/>
        <result property="subCategory" column="SUB_CATEGORY"/>
        <result property="verifiedStatus" column="vef_status"/>
        <result property="reviewStatus" column="review_status"/>
        <result property="viewCount" column="VIEW_COUNT"/>
        <association property="member" javaType="com.beanions.common.dto.MembersDTO">
            <id property="memberCode" column="member_code"/>
            <result property="nickname" column="nickname"/>
        </association>
        <collection property="file" ofType="com.beanions.common.dto.FilesDTO">
            <id property="fileCode" column="FILE_CODE"/>
            <result property="fileName" column="FILE_NAME"/>
            <result property="postCode" column="POST_CODE"/>
        </collection>
    </resultMap>

    <select id="selectAllPost" resultMap="adminPostResultMap">
        SELECT
        A.POST_CODE
        , A.MEMBER_CODE
        , A.POST_TITLE
        , A.POST_CONTEXT
        , A.POST_DATE
        , A.MAIN_CATEGORY
        , A.SUB_CATEGORY
        , A.VEF_STATUS
        , A.REVIEW_STATUS
        , A.VIEW_COUNT
        , B.MEMBER_CODE
        , B.NICKNAME
        , C.FILE_CODE
        , C.FILE_NAME
        , C.POST_CODE
        FROM POST A
        LEFT JOIN MEMBERS B ON (A.MEMBER_CODE = B.MEMBER_CODE)
        LEFT JOIN FILES C ON (A.POST_CODE = C.POST_CODE)
        WHERE MAIN_CATEGORY IN ('자유', '리뷰')
        <if test="keyword != null and keyword != ''">
        <!-- 전체 검색일 때 -->
            AND (
            A.POST_TITLE LIKE CONCAT('%', #{keyword}, '%')
            OR A.POST_CONTEXT LIKE CONCAT('%', #{keyword}, '%')
            OR B.NICKNAME LIKE CONCAT('%', #{keyword}, '%')
            )

        </if>
        ORDER BY A.POST_DATE DESC, A.POST_CODE DESC;
    </select>

    <select id="selectPost" parameterType="_int" resultMap="adminPostResultMap">
        SELECT
        A.POST_CODE
        , A.MEMBER_CODE
        , A.POST_TITLE
        , A.POST_CONTEXT
        , A.POST_DATE
        , A.MAIN_CATEGORY
        , A.SUB_CATEGORY
        , A.VEF_STATUS
        , A.REVIEW_STATUS
        , A.VIEW_COUNT
        , B.MEMBER_CODE
        , B.NICKNAME
        , C.FILE_CODE
        , C.FILE_NAME
        , C.POST_CODE
        FROM POST A
        LEFT JOIN MEMBERS B ON (A.MEMBER_CODE = B.MEMBER_CODE)
        LEFT JOIN FILES C ON (A.POST_CODE = C.POST_CODE)
        WHERE A.POST_CODE = #{ id }
    </select>

    <update id="postUpdate" parameterType="com.beanions.common.dto.PostDTO">
        UPDATE
        POST
        SET
        VEF_STATUS = #{ verifiedStatus }
        WHERE POST_CODE = #{ postCode }
    </update>

    <update id="postReview" parameterType="com.beanions.common.dto.PostDTO">
        UPDATE
        POST
        SET
        REVIEW_STATUS = #{ reviewStatus }
        WHERE POST_CODE = #{ postCode }
    </update>

    <delete id="postDelete" parameterType="_int">
        DELETE
        FROM POST
        WHERE POST_CODE = #{ id }
    </delete>

    <select id="selectAllNotice" resultMap="adminPostResultMap">
        SELECT
        A.POST_CODE
        , A.MEMBER_CODE
        , A.POST_TITLE
        , A.POST_CONTEXT
        , A.POST_DATE
        , A.MAIN_CATEGORY
        , A.SUB_CATEGORY
        , A.VEF_STATUS
        , A.REVIEW_STATUS
        , A.VIEW_COUNT
        , B.MEMBER_CODE
        , B.NICKNAME
        , C.FILE_CODE
        , C.FILE_NAME
        , C.POST_CODE
        FROM POST A
        LEFT JOIN MEMBERS B ON (A.MEMBER_CODE = B.MEMBER_CODE)
        LEFT JOIN FILES C ON (A.POST_CODE = C.POST_CODE)
        WHERE MAIN_CATEGORY = '공지사항'
        <if test="keyword != null and keyword != ''">
            <!-- 전체 검색일 때 -->
            AND (
            A.POST_TITLE LIKE CONCAT('%', #{keyword}, '%')
            OR A.POST_CONTEXT LIKE CONCAT('%', #{keyword}, '%')
            OR B.NICKNAME LIKE CONCAT('%', #{keyword}, '%')
            )

        </if>
        ORDER BY A.POST_DATE DESC, A.POST_CODE DESC;
    </select>

    <insert id="noticeRegist" parameterType="com.beanions.common.dto.PostDTO">
        INSERT INTO POST
        (
        MEMBER_CODE
        , POST_TITLE
        , POST_CONTEXT
        , MAIN_CATEGORY
        , SUB_CATEGORY
        , POST_DATE
        , REVIEW_STATUS
        , VIEW_COUNT
        , VEF_STATUS
        )
        VALUES
        (
        1
        , #{ postTitle }
        , #{ postContext }
        , '공지사항'
        , #{ subCategory }
        , DATE_FORMAT(now(), '%y/%m/%d')
        , NULL
        , 0
        , NULL
        )
    </insert>

    <update id="noticeUpdate" parameterType="com.beanions.common.dto.PostDTO">
        UPDATE
        POST
        SET
        POST_TITLE = #{ postTitle }
        , POST_CONTEXT = #{ postContext}
        , SUB_CATEGORY = #{ subCategory }
        WHERE POST_CODE = #{ postCode }
    </update>

    <select id="selectAllMagazine" resultMap="adminPostResultMap">
        SELECT
        A.POST_CODE
        , A.MEMBER_CODE
        , A.POST_TITLE
        , A.POST_CONTEXT
        , A.POST_DATE
        , A.MAIN_CATEGORY
        , A.SUB_CATEGORY
        , A.VEF_STATUS
        , A.REVIEW_STATUS
        , A.VIEW_COUNT
        , B.MEMBER_CODE
        , B.NICKNAME
        , C.FILE_CODE
        , C.FILE_NAME
        , C.POST_CODE
        FROM POST A
        LEFT JOIN MEMBERS B ON (A.MEMBER_CODE = B.MEMBER_CODE)
        LEFT JOIN FILES C ON (A.POST_CODE = C.POST_CODE)
        WHERE MAIN_CATEGORY = '매거진'
        ORDER BY A.POST_DATE DESC
    </select>

    <insert id="magazineRegist" parameterType="com.beanions.common.dto.PostDTO">
        INSERT INTO POST
        (
        MEMBER_CODE
        , POST_TITLE
        , POST_CONTEXT
        , MAIN_CATEGORY
        , SUB_CATEGORY
        , POST_DATE
        , VEF_STATUS
        , REVIEW_STATUS
        , VIEW_COUNT
        )
        VALUES
        (
        1
        , #{ postTitle }
        , #{ postContext }
        , '매거진'
        , #{ subCategory }
        , DATE_FORMAT(now(), '%y/%m/%d')
        , NULL
        , NULL
        , 0
        )
    </insert>


    <resultMap id="selectCurrenBoardResultMap" type="com.beanions.common.dto.PostDTO">
        <id property="postCode" column="post_code"/>
        <result property="memberCode" column="member_code"/>
        <result property="postTitle" column="post_title"/>
        <result property="postContext" column="post_context"/>
        <result property="postDate" column="post_date"/>
        <result property="mainCategory" column="main_category"/>
        <result property="subCategory" column="sub_category"/>
        <result property="reviewStatus" column="review_status"/>
        <result property="viewCount" column="viewCount"/>
    </resultMap>
    <select id="selectCurrentBoard" resultMap="selectCurrenBoardResultMap">
        SELECT
               POST_CODE
             , MEMBER_CODE
             , POST_TITLE
             , POST_CONTEXT
             , POST_DATE
             , MAIN_CATEGORY
             , SUB_CATEGORY
             , REVIEW_STATUS
             , VIEW_COUNT
          FROM POST
         WHERE MAIN_CATEGORY = '공지사항'
         ORDER BY POST_DATE DESC
         LIMIT 5
    </select>
    <select id="selectCurrentMagazine" resultMap="selectCurrenBoardResultMap">
        SELECT
               POST_CODE
             , MEMBER_CODE
             , POST_TITLE
             , POST_CONTEXT
             , POST_DATE
             , MAIN_CATEGORY
             , SUB_CATEGORY
             , REVIEW_STATUS
             , VIEW_COUNT
          FROM POST
         WHERE MAIN_CATEGORY = '매거진'
         ORDER BY POST_DATE DESC
         LIMIT 5
    </select>

    <resultMap id="selectAdminMainResultMap" type="com.beanions.admin.dto.AdminMainDTO">
        <result property="memberAll" column="member_all"/>
        <result property="memberDay" column="member_day"/>
        <result property="postAll" column="post_all"/>
        <result property="postDay" column="post_day"/>
        <result property="reviewAll" column="review_all"/>
        <result property="reviewDay" column="review_day"/>
        <result property="yesinAll" column="yesin_all"/>
        <result property="yesinDay" column="yesin_day"/>
        <result property="yerangAll" column="yerang_all"/>
        <result property="yerangDay" column="yerang_day"/>
        <result property="noticeAll" column="notice_all"/>
        <result property="noticeDay" column="notice_day"/>
        <result property="magazineAll" column="magazine_all"/>
        <result property="magazineDay" column="magazine_day"/>
        <result property="visitAll" column="visit_all"/>
        <result property="visitDay" column="visit_day"/>
    </resultMap>
    <select id="selectAdminMainData" resultMap="selectAdminMainResultMap">
        SELECT
        A.MEMBER_ALL
        , B.MEMBER_DAY
        , C.POST_ALL
        , D.POST_DAY
        , E.REVIEW_ALL
        , F.REVIEW_DAY
        , G.YESIN_ALL
        , H.YESIN_DAY
        , I.YERANG_ALL
        , J.YERANG_DAY
        , K.NOTICE_ALL
        , L.NOTICE_DAY
        , M.MAGAZINE_ALL
        , N.MAGAZINE_DAY
        , O.VISIT_ALL
        , P.VISIT_DAY
        FROM
        (SELECT COUNT(*) MEMBER_ALL FROM MEMBERS) A
        , (SELECT COUNT(*) MEMBER_DAY FROM MEMBERS WHERE SIGNUP_DATE = CURDATE()) B
        , (SELECT COUNT(*) POST_ALL FROM POST) C
        , (SELECT COUNT(*) POST_DAY FROM POST WHERE POST_DATE = CURDATE()) D
        , (SELECT COUNT(*) REVIEW_ALL FROM POST WHERE MAIN_CATEGORY = '리뷰') E
        , (SELECT COUNT(*) REVIEW_DAY FROM POST WHERE MAIN_CATEGORY = '리뷰' AND POST_DATE = CURDATE()) F
        , (SELECT COUNT(*) YESIN_ALL FROM POST WHERE SUB_CATEGORY = '예신') G
        , (SELECT COUNT(*) YESIN_DAY FROM POST WHERE SUB_CATEGORY = '예신' AND POST_DATE = CURDATE()) H
        , (SELECT COUNT(*) YERANG_ALL FROM POST WHERE SUB_CATEGORY = '예랑') I
        , (SELECT COUNT(*) YERANG_DAY FROM POST WHERE SUB_CATEGORY = '예랑' AND POST_DATE = CURDATE()) J
        , (SELECT COUNT(*) NOTICE_ALL FROM POST WHERE MAIN_CATEGORY = '공지사항') K
        , (SELECT COUNT(*) NOTICE_DAY FROM POST WHERE MAIN_CATEGORY = '공지사항' AND POST_DATE = CURDATE()) L
        , (SELECT COUNT(*) MAGAZINE_ALL FROM POST WHERE MAIN_CATEGORY = '매거진') M
        , (SELECT COUNT(*) MAGAZINE_DAY FROM POST WHERE MAIN_CATEGORY = '매거진' AND POST_DATE = CURDATE()) N
        , (SELECT COUNT(*) VISIT_ALL FROM VISITOR_COUNT) O
        , (SELECT COUNT(*) VISIT_DAY FROM VISITOR_COUNT WHERE DATE(TIMESTAMP) = DATE(NOW())) P;
    </select>

    <!-- 게시글 검색 -->
    <sql id="search">
        <!-- 검색 키워드가 있을 때 -->
        <if test="keyword != null and keyword != ''">
            <choose>
                <!-- 검색 유형이 있을 때 -->
                <when test="searchType != null and searchType != ''">
                    <choose>
                        <when test="'title'.equals( searchType )">
                            AND POST_TITLE LIKE CONCAT('%', #{keyword}, '%')
                        </when>
                        <when test="'context'.equals( searchType )">
                            AND POST_CONTEXT LIKE CONCAT('%', #{keyword}, '%')
                        </when>
                    </choose>
                </when>

                <!-- 전체 검색일 때 -->
                <otherwise>
                    AND (
                    POST_TITLE LIKE CONCAT('%', #{keyword}, '%')
                    OR POST_CONTEXT LIKE CONCAT('%', #{keyword}, '%')
                    )
                </otherwise>
            </choose>
        </if>
    </sql>

    <!-- 게시글 수 카운팅 -->
    <select id="count" parameterType="com.beanions.common.dto.SearchDTO" resultType="int">
        SELECT
        COUNT(*)
        FROM
        POST A
        LEFT JOIN MEMBERS B ON (A.MEMBER_CODE = B.MEMBER_CODE)
        WHERE MAIN_CATEGORY IN ('자유', '리뷰')
        <if test="keyword != null and keyword != ''">
            <!-- 전체 검색일 때 -->
            AND (
            A.POST_TITLE LIKE CONCAT('%', #{keyword}, '%')
            OR A.POST_CONTEXT LIKE CONCAT('%', #{keyword}, '%')
            OR B.NICKNAME LIKE CONCAT('%', #{keyword}, '%')
            )

        </if>
    </select>
    <select id="countNotice" parameterType="com.beanions.common.dto.SearchDTO" resultType="int">
        SELECT
        COUNT(*)
        FROM
        POST A
        LEFT JOIN MEMBERS B ON (A.MEMBER_CODE = B.MEMBER_CODE)
        WHERE MAIN_CATEGORY IN ('공지사항')
        <if test="keyword != null and keyword != ''">
            <!-- 전체 검색일 때 -->
            AND (
            A.POST_TITLE LIKE CONCAT('%', #{keyword}, '%')
            OR A.POST_CONTEXT LIKE CONCAT('%', #{keyword}, '%')
            OR B.NICKNAME LIKE CONCAT('%', #{keyword}, '%')
            )

        </if>
    </select>

</mapper>